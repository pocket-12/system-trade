openapi: 3.0.0
info:
  version: "1.5"
  title: "kabuステーションAPI"
  contact:
    url: ../ptal/index.html
  x-logo:
    url: ../ptal/content/image/common/logo.png
  termsOfService: https://kabucom.github.io/kabusapi/ptal/guide.html
servers:
  - url: http://localhost:18080/kabusapi
    description: 本番用
  - url: http://localhost:18081/kabusapi
    description: 検証用
tags:
  - name: auth
    description: |-
      APIトークンを発行します。
    x-displayName: 認証
  - name: order
    description: |-
      注文の発注・取消を行います。<br>
      発注系のリクエストは秒間5件ほどの流量制限を設けています。
    x-displayName: 発注
  - name: wallet
    description: |-
      取引余力を取得します。<br>
      取引余力のリクエストは秒間10件ほどの流量制限を設けています。
    x-displayName: 取引余力
  - name: info
    description: |-
      銘柄情報の取得や注文・残高の照会を行います。<br>
      情報系のリクエストは秒間10件ほどの流量制限を設けています。<br>
      リクエストされた銘柄は自動でAPI登録銘柄リストに登録されます。<br>
      API登録銘柄リストに登録できる銘柄数は、REST/PUSHを含めて最大50銘柄です。
    x-displayName: 情報
  - name: register
    description: |-
      PUSH配信する銘柄の登録や解除を行います。<br>
      登録された銘柄はkabuステーションのAPI登録銘柄リストに表示されます。<br>
      API登録銘柄リストに登録できる銘柄数は、REST/PUSHを含めて最大50銘柄です。
    x-displayName: "銘柄登録"
paths:
  /token:
    post:
      tags:
      - "auth"
      summary: "トークン発行"
      description: |-
        APIトークンを発行します。<br>
        発行したトークンは有効である限り使用することができ、リクエストごとに発行する必要はありません。<br>
        発行されたAPIトークンは以下のタイミングで無効となります。<br>
        ・kabuステーションを終了した時<br>
        ・kabuステーションからログアウトした時<br>
        ・別のトークンが新たに発行された時<br>
        ※kabuステーションは早朝、強制的にログアウトいたしますのでご留意ください。<br>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestToken"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenSuccess"
        '400':
          description : BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sendorder:
    post:
      tags:
      - "order"
      summary: "注文発注（現物・信用）"
      description: |-
        注文を発注します。<br>
        同一の銘柄に対しての注文は同時に5件ほどを上限としてご利用ください。
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSendOrder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSuccess'
        '400':
          description : BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sendorder/future:
    post:
      tags:
        - "order"
      summary: "注文発注（先物）"
      description: |-
        先物銘柄の注文を発注します。<br>
        同一の銘柄に対しての注文は同時に5件ほどを上限としてご利用ください。
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSendOrderDerivFuture'        
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrderSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sendorder/option:
    post:
      tags:
      - "order"
      summary: "注文発注（オプション）"
      description: |-
        オプション銘柄の注文を発注します。<br>
        同一の銘柄に対しての注文は同時に5件ほどを上限としてご利用ください。
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSendOrderDerivOption'  
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrderSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cancelorder:
    put:
      tags:
      - "order"
      summary: "注文取消"
      description: "注文を取消します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCancelOrder'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrderSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/cash:
    get:
      tags:
      - "wallet"
      summary: "取引余力（現物）"
      description: "口座の取引余力（現物）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletCashSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/cash/{symbol}@{exchange}:
    get:
      tags:
      - "wallet"
      summary: "取引余力（現物）（銘柄指定）"
      description: "指定した銘柄の取引余力（現物）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          description: |-
            市場コード
            <table>
              <thead>
                <tr><th>定義値</th><th>説明</th></tr>
              </thead>
              <tbody>
                <tr><td>1</td><td>東証</td></tr>
                <tr><td>3</td><td>名証</td></tr>
                <tr><td>5</td><td>福証</td></tr>
                <tr><td>6</td><td>札証</td></tr>
              </tbody>
            </table>
          schema:
            type: string
            enum:
            - 1
            - 3
            - 5
            - 6 
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletCashSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/margin:
    get:
      tags:
      - "wallet"
      summary: "取引余力（信用）"
      description: "口座の取引余力（信用）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletMarginSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/margin/{symbol}@{exchange}:
    get:
      tags:
      - "wallet"
      summary: "取引余力（信用）（銘柄指定）"
      description: "指定した銘柄の取引余力（信用）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          required: true
          description: |-
            市場コード
            <table>
              <thead>
                <tr><th>定義値</th><th>説明</th></tr>
              </thead>
              <tbody>
                <tr><td>1</td><td>東証</td></tr>
                <tr><td>3</td><td>名証</td></tr>
              </tbody>
            </table>
          schema: 
            type: string
            enum:
            - 1
            - 3
          
          
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletMarginSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/future:
    get:
      tags:
      - "wallet"
      summary: "取引余力（先物）"
      description: "口座の取引余力（先物）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletFutureSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/future/{symbol}@{exchange}:
    get:
      tags:
      - "wallet"
      summary: "取引余力（先物）（銘柄指定）"
      description: "指定した銘柄の取引余力（先物）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          required: true
          schema: 
            type: string
            enum:
            - 2
            - 23
            - 24 
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletFutureSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/option:
    get:
      tags:
      - "wallet"
      summary: "取引余力（オプション）"
      description: "口座の取引余力（オプション）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WalletOptionSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /wallet/option/{symbol}@{exchange}:
    get:
      tags:
      - "wallet"
      summary: "取引余力（オプション）（銘柄指定）"
      description: "指定した銘柄の取引余力（オプション）を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          required: true
          schema: 
            type: string
            enum:
            - 2
            - 23
            - 24 
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/WalletOptionSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /board/{symbol}@{exchange}:
    get:
      tags:
      - "info"
      summary: "時価情報・板情報"
      description: "指定した銘柄の時価情報・板情報を取得します<br>レスポンスの一部にnullが発生した場合、該当銘柄を銘柄登録をしてから、<br>再度時価情報・板情報APIを実行してください。"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          required: true
          schema: 
            type: string
            enum:
            - 1
            - 3
            - 5
            - 6
            - 2
            - 23
            - 24
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>東証</td></tr>
            <tr><td>3</td><td>名証</td></tr>
            <tr><td>5</td><td>福証</td></tr>
            <tr><td>6</td><td>札証</td></tr>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BoardSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /symbol/{symbol}@{exchange}:
    get:
      tags:
      - "info"
      summary: "銘柄情報"
      description: "指定した銘柄情報を取得します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: path
          name: symbol
          description: 銘柄コード
          schema:
            type: string
          required: true
        - in: path
          name: exchange
          required: true
          schema: 
            type: string
            enum:
            - 1
            - 3
            - 5
            - 6
            - 2
            - 23
            - 24
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>東証</td></tr>
            <tr><td>3</td><td>名証</td></tr>
            <tr><td>5</td><td>福証</td></tr>
            <tr><td>6</td><td>札証</td></tr>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SymbolSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /orders:
    get:
      tags:
      - "info"
      summary: "注文約定照会"
      description: "注文一覧を取得します。<br>※下記Queryパラメータは任意設定となります。"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: query
          name: product
          schema:
            type: string
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          required: false
          description: |-
            取得する商品
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>すべて </td></tr>     
            <tr><td>1</td><td>現物</td></tr>         
            <tr><td>2</td><td>信用</td></tr>        
            <tr><td>3</td><td>先物</td></tr>        
            <tr><td>4</td><td>OP</td></tr>           
            </tbody>
            </table>
        - in : query
          name: id
          description: "注文番号<br>※指定された注文番号と一致する注文のみレスポンスします。<br>※指定された注文番号との比較では大文字小文字を区別しません。<br>※複数の注文番号を指定することはできません。"
          required: false
          schema:
            type: string
        - in : query
          name: updtime
          description: "更新日時<br>※形式：yyyyMMddHHmmss （例：20201201123456）<br>※指定された更新日時以降（指定日時含む）に更新された注文のみレスポンスします。<br>※複数の更新日時を指定することはできません。"
          schema:
            type: string
          required: false
        - in: query
          name: details
          description: |-
            注文詳細抑止
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            <thead>
            <tbody>
            <tr><td>true</td><td>注文詳細を出力する（デフォルト）</td></tr>
            <tr><td>false</td><td>注文詳細の出力しない</td></tr>
            </tbody>
            </table>
          schema:
            type: string
          required : false
        - in: query
          name: symbol
          schema:
            type: string
          description: 銘柄コード<br>※指定された銘柄コードと一致する注文のみレスポンスします。<br>※複数の銘柄コードを指定することができません。
          required: false
        - in: query
          name: state
          description: |-
              状態
              <br>※指定された状態と一致する注文のみレスポンスします。<br>※フィルタには数字の入力のみ受け付けます。<br>※複数の状態を指定することはできません。
              <table>
              <thead>
              <tr><th>定義値</th><th>説明</th></tr>
              </thead>
              <tbody>
              <tr><td>1</td><td>待機（発注待機）</td></tr>
              <tr><td>2</td><td>処理中（発注送信中）</td></tr>
              <tr><td>3</td><td>処理済（発注済・訂正済）</td></tr>
              <tr><td>4</td><td>訂正取消送信中</td></tr>
              <tr><td>5</td><td>終了（発注エラー・取消済・全約定・失効・期限切れ）</td></tr>
              </tbody>
              </table>
          schema:
            type: string
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
          required: false
        - in: query
          name: side
          description: |-
            売買区分
            <br>※指定された売買区分と一致する注文のみレスポンスします。<br>※フィルタには数字の入力のみ受け付けます。<br>※複数の売買区分を指定することができません。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>売</td></tr>
            <tr><td>2</td><td>買</td></tr>
            </tbody>
            </table>
          required: false
          schema:
            type: string
            enum:
            - 1
            - 2
        - in: query
          name: cashmargin
          schema:
            type: string
            enum:
            - 2
            - 3
          description: |-
            取引区分
            <br>※指定された取引区分と一致する注文のみレスポンスします。<br>※フィルタには数字の入力のみ受け付けます。<br>※複数の取引区分を指定することができません。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>2</td><td>新規</td></tr>
            <tr><td>3</td><td>返済</td></tr>
            </tbody>
            </table>
              
              
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrdersSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /positions:
    get:
      tags:
      - "info"
      summary: "残高照会"
      description: "残高一覧を取得します。<br>※下記Queryパラメータは任意設定となります。"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: query
          name: product
          description: |-
            取得する商品
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>すべて</td></tr>
            <tr><td>1</td><td>現物</td></tr>
            <tr><td>2</td><td>信用</td></tr>
            <tr><td>3</td><td>先物</td></tr>
            <tr><td>4</td><td>OP</td></tr>
            </tbody>
            </table>
          schema:
            type: string
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          required: false
        - in: query
          name: symbol
          description: "銘柄コード<br>※指定された銘柄コードと一致するポジションのみレスポンスします。<br>※複数の銘柄コードを指定することはできません。"
          schema:
            type: string
          required: false
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/PositionsSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /register:
    put:
      tags:
      - "register"
      summary: "銘柄登録"
      description: "PUSH配信する銘柄を登録します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        description: 登録する銘柄のリスト
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegister'
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/RegistSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /unregister:
    put:
      tags:
      - "register"
      summary: "銘柄登録解除"
      description: "API登録銘柄リストに登録されている銘柄を解除します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      requestBody:
        required: true
        description: 登録解除する銘柄のリスト
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegister'
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/RegistSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /unregister/all:
    put:
      tags:
      - "register"
      summary: "銘柄登録全解除"
      description: "API登録銘柄リストに登録されている銘柄をすべて解除します"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UnregisterAllSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /symbolname/future:
    get:
      tags:
      - "info"
      summary: "先物銘柄コード取得"
      description: "先物銘柄コード取得"
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: query
          name: FutureCode
          schema:
            type: string
          description: |-
            先物コード<br>※大文字小文字は区別しません。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>NK225</td><td>日経平均先物</td></tr>
            <tr><td>NK225mini</td><td>日経225mini先物</td></tr>
            <tr><td>TOPIX</td><td>TOPIX先物</td></tr>
            <tr><td>TOPIXmini</td><td>ミニTOPIX先物</td></tr>
            <tr><td>MOTHERS</td><td>東証マザーズ先物</td></tr>
            <tr><td>JPX400</td><td>JPX日経400先物</td></tr>
            <tr><td>DOW</td><td>NYダウ先物</td></tr>
            <tr><td>VI</td><td>日経平均VI先物</td></tr>
            <tr><td>Core30</td><td>TOPIX Core30先物</td></tr>
            <tr><td>REIT</td><td>東証REIT指数先物</td></tr>
            </tbody>
            </table>
        - in: "query"
          name: "DerivMonth"
          description: "限月<br>※限月はyyyyMM形式で指定します。0を指定した場合、直近限月となります。<br>※取引最終日に「0」（直近限月）を指定した場合、日中・夜間の時間帯に関わらず、取引最終日を迎える限月の銘柄コードを返します。取引最終日を迎える銘柄の取引は日中取引をもって終了となりますので、ご注意ください。"
          required: true
          schema:
            type : integer
            format: int32
      responses:
          '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SymbolNameSuccess'
          '400':
              description : BadRequest
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description : Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description : NotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '405':
            description : MethodNotAllowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '413':
            description : RequestEntityTooLarge
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '415':
            description : UnsupportedMediaType
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '429':
            description : TooManyRequests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description : InternalServerError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'    
  /symbolname/option:
    get:
      tags:
      - "info"
      summary: "オプション銘柄コード取得"
      description: "オプション銘柄コード取得"  
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: "query"
          name: "DerivMonth"
          description: "限月<br>※限月はyyyyMM形式で指定します。0を指定した場合、直近限月となります。<br>※取引最終日に「0」（直近限月）を指定した場合、日中・夜間の時間帯に関わらず、取引最終日を迎える限月の銘柄コードを返します。取引最終日を迎える銘柄の取引は日中取引をもって終了となりますので、ご注意ください。"
          required: true
          schema:
            type: integer
            format: int32
        - in: "query"
          name: "PutOrCall"
          description: |-
            コール or プット<br>※大文字小文字は区別しません。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>P</td><td>PUT</td></tr>
            <tr><td>C</td><td>CALL</td></tr>
            </tbody>
            </table>
          schema:
            type: string
          required: true
        - in: "query"
          name: "StrikePrice"
          description: "権利行使価格<br>※0を指定した場合、APIを実行した時点でのATMとなります。"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SymbolNameSuccess'
        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
  /ranking:
    get:
      tags:
      - "info"
      summary: "詳細ランキング"
      description: |
        詳細ランキング画面と同様の各種ランキングを返します。
        <br>ランキングの対象日はkabuステーションが保持している当日のデータとなります。
        <br>※株価情報ランキング、業種別指数ランキングは、下記の時間帯でデータがクリアされるため、
        <br>その間の詳細ランキングAPIは空レスポンスとなります。
        <br>データクリア：平日7:53頃-9:00過ぎ頃
        <br>※信用情報ランキングは毎週第３営業日の7:55頃にデータが更新されます。
      parameters:
        - in: header
          name: X-API-KEY
          description: トークン発行メソッドで取得した文字列
          schema:
            type: string
          required: true
        - in: query
          name: Type
          description: |-
            種別<br>※信用情報ランキングに「福証」「札証」を指定した場合は、空レスポンスになります
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>値上がり率（デフォルト）</td></tr>
            <tr><td>2</td><td>値下がり率</td></tr>
            <tr><td>3</td><td>売買高上位</td></tr>
            <tr><td>4</td><td>売買代金</td></tr>
            <tr><td>5</td><td>TICK回数</td></tr>
            <tr><td>6</td><td>売買高急増</td></tr>
            <tr><td>7</td><td>売買代金急増</td></tr>
            <tr><td>8</td><td>信用売残増</td></tr>
            <tr><td>9</td><td>信用売残減</td></tr>
            <tr><td>10</td><td>信用買残増</td></tr>
            <tr><td>11</td><td>信用買残減</td></tr>
            <tr><td>12</td><td>信用高倍率</td></tr>
            <tr><td>13</td><td>信用低倍率</td></tr>
            <tr><td>14</td><td>業種別値上がり率</td></tr>
            <tr><td>15</td><td>業種別値下がり率</td></tr>
            </tbody>
            </table>
          schema:
            type: string
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
          required: true
        - in: query
          name: ExchangeDivision
          description: |-
            市場<br>※業種別値上がり率・値下がり率に市場を指定しても無視されます
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>ALL</td><td>全市場（デフォルト）</td></tr>
            <tr><td>T</td><td>東証全体</td></tr>
            <tr><td>T1</td><td>東証一部</td></tr>
            <tr><td>T2</td><td>東証二部</td></tr>
            <tr><td>TM</td><td>マザーズ</td></tr>
            <tr><td>JQ</td><td>JASDAQ</td></tr>
            <tr><td>M</td><td>名証</td></tr>
            <tr><td>FK</td><td>福証</td></tr>
            <tr><td>S</td><td>札証</td></tr>
            </tbody>
            </table>
          schema:
            type: string
            enum:
              - ALL
              - T
              - T1
              - T2
              - TM 
              - JQ 
              - M
              - FK 
              - S
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RankingDefaultResponse'
                  - $ref: '#/components/schemas/RankingByTickCountResponse'
                  - $ref: '#/components/schemas/RankingByTradeVolumeResponse'
                  - $ref: '#/components/schemas/RankingByTradeValueResponse'
                  - $ref: '#/components/schemas/RankingByMarginResponse'
                  - $ref: '#/components/schemas/RankingByCategoryResponse'

        '400':
            description : BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '401':
            description: Unauthorized
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/ErrorResponse'
        '403':
          description : Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description : NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description : MethodNotAllowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description : RequestEntityTooLarge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description : UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description : TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description : InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
# Component Schemas
components:
  schemas:
  # Request
    RequestToken:
      type: "object"
      required:
      - APIPassword
      properties:
        APIPassword:
          description: "APIパスワード"
          type: "string"
          example: "xxxxxx"
    RequestSendOrder:
      type: object
      required:
        - Password
        - Symbol
        - Exchange
        - SecurityType
        - Side
        - CashMargin
        - DelivType
        - AccountType
        - Qty
        - Price
        - ExpireDay
        - FrontOrderType
      properties:
        Password:
          description: 注文パスワード
          type: "string"
          example: "xxxxxx"
        Symbol:
          description: 銘柄コード
          type: "string"
          example: "9433"
        Exchange:
          description: 市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>東証</td></tr>
            <tr><td>3</td><td>名証</td></tr>
            <tr><td>5</td><td>福証</td></tr>
            <tr><td>6</td><td>札証</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        SecurityType:
          description: 商品種別
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>株式</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        Side:
          description: 売買区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>売</td></tr>
            <tr><td>2</td><td>買</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "1"
        CashMargin:
          description: 信用区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>現物</td></tr>
            <tr><td>2</td><td>新規</td></tr>
            <tr><td>3</td><td>返済</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 3
        MarginTradeType:
          description: 信用取引区分<br>※現物取引の場合は指定不要。<br>※信用取引の場合、必須。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>制度信用</td></tr>
            <tr><td>2</td><td>一般信用</td></tr>
            <tr><td>3</td><td>一般信用（売短）</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        DelivType:
          description: 受渡区分<br>※現物買は指定必須。<br>※現物売は「0(指定なし)」を設定<br>※信用新規は「0(指定なし)」を設定<br>※信用返済は指定必須
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>指定なし</td></tr>
            <tr><td>1</td><td>自動振替</td></tr>
            <tr><td>2</td><td>お預り金</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        FundType:
          description: 資産区分（預り区分）<br>※現物買は、指定必須。<br>※現物売は、「'  '」 半角スペース2つを指定必須。<br>※信用新規と信用返済は、指定不要。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>(半角スペース2つ)</td><td>現物売の場合</td></tr>
            <tr><td>02</td><td>保護</td></tr>
            <tr><td>AA</td><td>信用代用</td></tr>
            <tr><td>11</td><td>信用取引</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "11"
        AccountType:
          description: 口座種別
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>2</td><td>一般</td></tr>
            <tr><td>4</td><td>特定</td></tr>
            <tr><td>12</td><td>法人</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 4
        Qty:
          description: "注文数量<br>※信用一括返済の場合、返済したい合計数量を入力してください。"
          type: "integer"
          format: "int32"
          example: 500
        ClosePositionOrder:
          description: |-
            決済順序<br>※信用返済の場合、必須。<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>日付（古い順）、損益（高い順）</td></tr>
            <tr><td>1</td><td>日付（古い順）、損益（低い順）</td></tr>
            <tr><td>2</td><td>日付（新しい順）、損益（高い順）</td></tr>
            <tr><td>3</td><td>日付（新しい順）、損益（低い順）</td></tr>
            <tr><td>4</td><td>損益（高い順）、日付（古い順）</td></tr>
            <tr><td>5</td><td>損益（高い順）、日付（新しい順）</td></tr>
            <tr><td>6</td><td>損益（低い順）、日付（古い順）</td></tr>
            <tr><td>7</td><td>損益（低い順）、日付（新しい順）</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: null
        ClosePositions:
          description: 返済建玉指定<br>※信用返済の場合、必須。<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。<br>※信用一括返済の場合、各建玉IDと返済したい数量を入力してください。<br>※建玉IDは「E」から始まる番号です。
          type: "array"
          items:
            $ref: "#/components/schemas/Positions"
        FrontOrderType:
          description: 執行条件
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th><th>”Price"の指定</th></tr>
            </thead>
            <tbody>
            <tr><td>10</td><td>成行</td><td>0</td></tr>
            <tr><td>13</td><td>寄成（前場）</td><td>0</td></tr>
            <tr><td>14</td><td>寄成（後場）</td><td>0</td></tr>
            <tr><td>15</td><td>引成（前場）</td><td>0</td></tr>
            <tr><td>16</td><td>引成（後場）</td><td>0</td></tr>
            <tr><td>17</td><td>IOC成行</td><td>0</td></tr>
            <tr><td>20</td><td>指値</td><td>発注したい金額</td></tr>
            <tr><td>21</td><td>寄指（前場）</td><td>発注したい金額</td></tr>
            <tr><td>22</td><td>寄指（後場）</td><td>発注したい金額</td></tr>
            <tr><td>23</td><td>引指（前場）</td><td>発注したい金額</td></tr>
            <tr><td>24</td><td>引指（後場）</td><td>発注したい金額</td></tr>
            <tr><td>25</td><td>不成（前場）</td><td>発注したい金額</td></tr>
            <tr><td>26</td><td>不成（後場）</td><td>発注したい金額</td></tr>
            <tr><td>27</td><td>IOC指値</td><td>発注したい金額</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 10
        Price:
          description: 注文価格<br>※FrontOrderTypeで成行を指定した場合、0を指定する。<br>※詳細について、”FrontOrderType”をご確認ください。
          type: "number"
          format: "double"
          example: 0
        ExpireDay:
          description: |
            注文有効期限<br>
            yyyyMMdd形式。<br>
            「0」を指定すると、kabuステーション上の発注画面の「本日」に対応する日付として扱います。<br>
            「本日」は直近の注文可能日となり、以下のように設定されます。<br>
            引けまでの間 : 当日<br>
            引け後       : 翌取引所営業日<br>
            休前日       : 休日明けの取引所営業日<br>
            ※ 日替わりはkabuステーションが日付変更通知を受信したタイミングです。
          type: "integer"
          format: "int32"
          example: 20200903
    RequestSendOrderDerivFuture:
      type: "object"
      required:
        - Password
        - Symbol
        - Exchange
        - TradeType
        - TimeInForce
        - Side
        - Qty
        - Price
        - ExpireDay
        - FrontOrderType
      properties:
        Password:
          description: "注文パスワード"
          type: "string"
          example: "xxxxxx"
        Symbol:
          description: "銘柄コード<br>※取引最終日に「先物銘柄コード取得」でDerivMonthに0（直近限月）を指定した場合、日中・夜間の時間帯に関わらず、取引最終日を迎える限月の銘柄コードを返します。取引最終日を迎える銘柄の取引は日中取引をもって終了となりますので、ご注意ください。"
          type: "string"
          example: "165120019"
        Exchange:
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr> 
            </thead>
            <tbody>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
          #
          type: "integer"
          format: "int32"
          example: 23
        TradeType:
          description: |-
            取引区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>新規</td></tr>
            <tr><td>2</td><td>返済</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        TimeInForce:
          description: |-
            有効期間条件
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>FAS<br>※FASを指定した場合、FrontOrderTypeは指値(20)のみ指定可能。</td></tr>
            <tr><td>2</td><td>FAK<br>※FAKを指定した場合、Exchangeは日中(23)、夜間(24)のみ指定可能。</td></tr>
            <tr><td>3</td><td>FOK<br>※FOKを指定した場合、Exchangeは日中(23)、夜間(24)のみ指定可能。</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        Side:
          description: |-
            売買区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>売</td></tr>
            <tr><td>2</td><td>買</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "1"
        Qty:
          description: "注文数量"
          type: "integer"
          format: "int32"
          example: 1
        ClosePositionOrder:
          description: |-
            決済順序<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>日付（古い順）、損益（高い順）</td></tr>
            <tr><td>1</td><td>日付（古い順）、損益（低い順）</td></tr>
            <tr><td>2</td><td>日付（新しい順）、損益（高い順）</td></tr>
            <tr><td>3</td><td>日付（新しい順）、損益（低い順）</td></tr>
            <tr><td>4</td><td>損益（高い順）、日付（古い順）</td></tr>
            <tr><td>5</td><td>損益（高い順）、日付（新しい順）</td></tr>
            <tr><td>6</td><td>損益（低い順）、日付（古い順）</td></tr>
            <tr><td>7</td><td>損益（低い順）、日付（新しい順）</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: null
        ClosePositions:
          description: "返済建玉指定<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。"
          type: "array"
          items:
            $ref: "#/components/schemas/PositionsDeriv"
        FrontOrderType:
          description: |-
            執行条件
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th><th>”Price”の指定</th></tr>
            </thead>
            <tbody>
            <tr><td>18</td><td>引成（派生）<br>※TimeInForceは、「FAK」のみ有効</td><td>0</td></tr>
            <tr><td>20</td><td>指値</td><td>発注したい金額</td></tr>
            <tr><td>28</td><td>引指（派生）<br>※TimeInForceは、「FAS」のみ有効</td><td>発注したい金額</td></tr>
            <tr><td>120</td><td>成行（マーケットオーダー）</td><td>0</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 120
        Price:
          description: "注文価格<br>※FrontOrderTypeで成行を指定した場合、0を指定する。<br>※詳細について、”FrontOrderType”をご確認ください。"
          type: "integer"
          format: "int32"
          example: 0
        ExpireDay:
          description: |-
            注文有効期限<br>
            yyyyMMdd形式。<br>
            「0」を指定すると、kabuステーション上の発注画面の「本日」に対応する日付として扱います。<br>
            「本日」は直近の注文可能日となり、以下のように設定されます。<br>
            その市場の引けまでの間 : 当日<br>
            その市場の引け後       : 翌取引所営業日<br>
            その市場の休前日       : 休日明けの取引所営業日<br>
            ※ 日替わりはkabuステーションが日付変更通知を受信したタイミングです。<br>
            ※ 日通しの場合、夜間取引の引け後に日付が更新されます。
          type: "integer"
          format: "int32"
          example: 20200903
    RequestSendOrderDerivOption:
      type: "object"
      required:
        - Password
        - Symbol
        - Exchange
        - TradeType
        - TimeInForce
        - Side
        - Qty
        - Price
        - ExpireDay
        - FrontOrderType
      properties:
        Password:
          description: "注文パスワード"
          type: "string"
          example: "xxxxxx"
        Symbol:
          description: "銘柄コード<br>※取引最終日に「オプション銘柄コード取得」でDerivMonthに0（直近限月）を指定した場合、日中・夜間の時間帯に関わらず、取引最終日を迎える限月の銘柄コードを返します。取引最終日を迎える銘柄の取引は日中取引をもって終了となりますので、ご注意ください。"
          type: "string"
          example: "165120019"
        Exchange:
          description: |-
            市場コード
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 23
        TradeType:
          description: |-
            取引区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>新規</td></tr>
            <tr><td>2</td><td>返済</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        TimeInForce:
          description: |-
            有効期間条件
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>FAS<br>※FASを指定した場合、FrontOrderTypeは指値(20)のみ指定可能。</td></tr>
            <tr><td>2</td><td>FAK<br>※FAKを指定した場合、Exchangeは日中(23)、夜間(24)のみ指定可能。</td></tr>
            <tr><td>3</td><td>FOK<br>※FOKを指定した場合、Exchangeは日中(23)、夜間(24)のみ指定可能。</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        Side:
          description: |-
            売買区分
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>売</td></tr>
            <tr><td>2</td><td>買</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "1"
        Qty:
          description: "注文数量"
          type: "integer"
          format: "int32"
          example: 1
        ClosePositionOrder:
          description: |-
            決済順序<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>日付（古い順）、損益（高い順）</td></tr>
            <tr><td>1</td><td>日付（古い順）、損益（低い順）</td></tr>
            <tr><td>2</td><td>日付（新しい順）、損益（高い順）</td></tr>
            <tr><td>3</td><td>日付（新しい順）、損益（低い順）</td></tr>
            <tr><td>4</td><td>損益（高い順）、日付（古い順）</td></tr>
            <tr><td>5</td><td>損益（高い順）、日付（新しい順）</td></tr>
            <tr><td>6</td><td>損益（低い順）、日付（古い順）</td></tr>
            <tr><td>7</td><td>損益（低い順）、日付（新しい順）</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: null
        ClosePositions:
          description: "返済建玉指定<br>※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。<br>※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。"
          type: "array"
          items:
            $ref: "#/components/schemas/PositionsDeriv"
        FrontOrderType:
          description: |-
            執行条件
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th><th>”Price”の指定</th></tr>
            </thead>
            <tbody>
            <tr><td>18</td><td>引成（派生）<br>※TimeInForceは、「FAK」のみ有効</td><td>0</td></tr>
            <tr><td>20</td><td>指値</td><td>発注したい金額</td></tr>
            <tr><td>28</td><td>引指（派生）<br>※TimeInForceは、「FAS」のみ有効</td><td>発注したい金額</td></tr>
            <tr><td>120</td><td>成行（マーケットオーダー）</td><td>0</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 120
        Price:
          description: "注文価格<br>※FrontOrderTypeで成行を指定した場合、0を指定する。<br>※詳細について、”FrontOrderType”をご確認ください。"
          type: "integer"
          format: "int32"
          example: 0
        ExpireDay:
          description: |-
            注文有効期限<br>
            yyyyMMdd形式。<br>
            「0」を指定すると、kabuステーション上の発注画面の「本日」に対応する日付として扱います。<br>
            「本日」は直近の注文可能日となり、以下のように設定されます。<br>
            その市場の引けまでの間 : 当日<br>
            その市場の引け後       : 翌取引所営業日<br>
            その市場の休前日       : 休日明けの取引所営業日<br>
            ※ 日替わりはkabuステーションが日付変更通知を受信したタイミングです。<br>
            ※ 日通しの場合、夜間取引の引け後に日付が更新されます。
          type: "integer"
          format: "int32"
          example: 20200903
    Positions:
      type: "object"
      properties:
        HoldID:
          description: "返済建玉ID"
          type: "string"
          example: "20200702E01N04699739"
        Qty:
          description: "返済建玉数量"
          type: "integer"
          format: "int32"
          example: 500
    PositionsDeriv:
      type: "object"
      properties:
        HoldID:
          description: "返済建玉ID"
          type: "string"
          example: "20200903E01N04773904"
        Qty:
          description: "返済建玉数量"
          type: "integer"
          format: "int32"
          example: 1
    RequestCancelOrder:
      type: "object"
      required:
        - OrderId
        - Password
      properties:
        OrderId:
          description: "注文番号<br>sendorderのレスポンスで受け取るOrderID。"
          type: "string"
          example: "20200529A01N06848002"
        Password:
          description: "注文パスワード"
          type: "string"
          example: "xxxxxx"
    RequestRegister:
      type: "object"
      properties:
        Symbols:
          type: "array"
          items:
            type: "object"
            properties:
              Symbol:
                description: "銘柄コード"
                type: "string"
                example: "9433"
              Exchange:
                description: |-
                  市場コード
                  <table>
                  <thead>
                  <tr><th>定義値</th><th>説明</th></tr>
                  </thead>
                  <tbody>
                  <tr><td>1</td><td>東証</td></tr>
                  <tr><td>3</td><td>名証</td></tr>
                  <tr><td>5</td><td>福証</td></tr>
                  <tr><td>6</td><td>札証</td></tr>
                  <tr><td>2</td><td>日通し</td></tr>
                  <tr><td>23</td><td>日中</td></tr>
                  <tr><td>24</td><td>夜間</td></tr>
                  </tbody>
                  </table>
                type: "integer"
                format: "int32"
                example: 1
    TokenSuccess:
      type: "object"
      properties:
        ResultCode:
          description: "結果コード<br>0が成功。それ以外はエラーコード。"
          type: "integer"
          format: "int32"
          example: 0
        Token:
          description: "APIトークン"
          type: "string"
          example: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    OrderSuccess:
      type: "object"
      properties:
        Result:
          description: "結果コード<br>0が成功。それ以外はエラーコード。"
          type: "integer"
          format: "int32"
          example: 0
        OrderId:
          description: "受付注文番号"
          type: "string"
          example: "20200529A01N06848002"
    WalletCashSuccess:
      type: "object"
      properties:
        StockAccountWallet:
          description: "現物買付可能額"
          type: "number"
          format: "double"
          example: null
    WalletMarginSuccess:
      type: "object"
      properties:
        MarginAccountWallet:
          description: "信用新規可能額"
          type: "number"
          format: "double"
          example: null
        DepositkeepRate:
          description: "保証金維持率<br>※銘柄指定の場合のみ<br>※銘柄が指定されなかった場合、0.0を返す。"
          type: "number"
          format: "double"
          example: null
        ConsignmentDepositRate:
          description: "委託保証金率<br>※銘柄指定の場合のみ。<br>※銘柄が指定されなかった場合、Noneを返す。"
          type: "number"
          format: "double"
          example: null
        CashOfConsignmentDepositRate:
          description: "現金委託保証金率<br>※銘柄指定の場合のみ。<br>※銘柄が指定されなかった場合、Noneを返す。"
          type: "number"
          format: "double"
          example: null
    WalletFutureSuccess:
      type: "object"
      properties:
        FutureTradeLimit:
          description: "新規建玉可能額"
          type: "number"
          format: "double"
          example: null
        MarginRequirement:
          description: "必要証拠金額<br>※銘柄指定の場合のみ。<br>※銘柄が指定されなかった場合、空を返す。"
          type: "number"
          format: "double"
          example: null
    WalletOptionSuccess:
      type: "object"
      properties:
        OptionBuyTradeLimit:
          description: "買新規建玉可能額"
          type: "number"
          format: "double"
          example: null
        OptionSellTradeLimit:
          description: "売新規建玉可能額"
          type: "number"
          format: "double"
          example: null
        MarginRequirement:
          description: "必要証拠金額<br>※銘柄指定の場合のみ。<br>※銘柄が指定されなかった場合、空を返す。"
          type: "number"
          format: "double"
          example: null
    BoardSuccess:
      description: "下記にあるBIDとASKとは、トレーダー目線から見た場合の値であるため、BidPrice=Sell1のPrice、AskPrice=Buy1のPriceという数値となります。"
      type: "object"
      properties:
        Symbol:
          description: "銘柄コード"
          type: "string"
          example: "5401"
        SymbolName:
          description: "銘柄名"
          type: "string"
          example: "新日鐵住金"
        Exchange:
          description: |-
            市場コード<br>※株式・先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>東証</td></tr>
            <tr><td>3</td><td>名証</td></tr>
            <tr><td>5</td><td>福証</td></tr>
            <tr><td>6</td><td>札証</td></tr>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        ExchangeName:
          description: "市場名称<br>※株式・先物・オプション銘柄の場合のみ"
          type: "string"
          example: "東証１部"
        CurrentPrice:
          description: "現値"
          type: "number"
          format: "double"
          example: 2408.0
        CurrentPriceTime:
          description: "現値時刻"
          type: "string"
          format: "date-time"
          example: "2020-07-22T15:00:00+09:00"
        CurrentPriceChangeStatus:
          description: |-
            現値前値比較
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0000</td><td>事象なし</td></tr>
            <tr><td>0056</td><td>変わらず</td></tr>
            <tr><td>0057</td><td>UP</td></tr>
            <tr><td>0058</td><td>DOWN</td></tr>
            <tr><td>0059</td><td>中断板寄り後の初値</td></tr>
            <tr><td>0060</td><td>ザラバ引け</td></tr>
            <tr><td>0061</td><td>板寄り引け</td></tr>
            <tr><td>0062</td><td>中断引け</td></tr>
            <tr><td>0063</td><td>ダウン引け</td></tr>
            <tr><td>0064</td><td>逆転終値</td></tr>
            <tr><td>0066</td><td>特別気配引け</td></tr>
            <tr><td>0067</td><td>一時留保引け</td></tr>
            <tr><td>0068</td><td>売買停止引け</td></tr>
            <tr><td>0069</td><td>サーキットブレーカ引け</td></tr>
            <tr><td>0431</td><td>ダイナミックサーキットブレーカ引け</td></tr>
          type: "string"
          example: "0058"
        CurrentPriceStatus:
          description: |-
            現値ステータス
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>現値</td></tr>
            <tr><td>2</td><td>不連続歩み</td></tr>
            <tr><td>3</td><td>板寄せ</td></tr>
            <tr><td>4</td><td>システム障害</td></tr>
            <tr><td>5</td><td>中断</td></tr>
            <tr><td>6</td><td>売買停止</td></tr>
            <tr><td>7</td><td>売買停止・システム停止解除</td></tr>
            <tr><td>8</td><td>終値</td></tr>
            <tr><td>9</td><td>システム停止</td></tr>
            <tr><td>10</td><td>概算値</td></tr>
            <tr><td>11</td><td>参考値</td></tr>
            <tr><td>12</td><td>サーキットブレイク実施中</td></tr>
            <tr><td>13</td><td>システム障害解除</td></tr>
            <tr><td>14</td><td>サーキットブレイク解除</td></tr>
            <tr><td>15</td><td>中断解除</td></tr>
            <tr><td>16</td><td>一時留保中</td></tr>
            <tr><td>17</td><td>一時留保解除</td></tr>
            <tr><td>18</td><td>ファイル障害</td></tr>
            <tr><td>19</td><td>ファイル障害解除</td></tr>
            <tr><td>20</td><td>Spread/Strategy</td></tr>
            <tr><td>21</td><td>ダイナミックサーキットブレイク発動</td></tr>
            <tr><td>22</td><td>ダイナミックサーキットブレイク解除</td></tr>
            <tr><td>23</td><td>板寄せ約定</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        CalcPrice:
          description: "計算用現値"
          type: "number"
          format: "double"
          example: 343.7
        PreviousClose:
          description: "前日終値"
          type: "number"
          format: "double"
          example: 1048.0000
        PreviousCloseTime:
          description: "前日終値日付"
          type: "string"
          format: "date-time"
          example: "2020-07-21T00:00:00+09:00"
        ChangePreviousClose:
          description: "前日比"
          type: "number"
          format: "double"
          example: 1360.0000
        ChangePreviousClosePer:
          description: "騰落率"
          type: "number"
          format: "double"
          example: 129.77
        OpeningPrice:
          description: "始値"
          type: "number"
          format: "double"
          example: 2380.0
        OpeningPriceTime:
          description: "始値時刻"
          type: "string"
          format: "date-time"
          example: "2020-07-22T09:00:00+09:00"
        HighPrice:
          description: "高値"
          type: "number"
          format: "double"
          example: 2418.0
        HighPriceTime:
          description: "高値時刻"
          type: "string"
          format: "date-time"
          example: "2020-07-22T13:25:47+09:00"
        LowPrice:
          description: "安値"
          type: "number"
          format: "double"
          example: 2370.0
        LowPriceTime:
          description: "安値時刻"
          type: "string"
          format: "date-time"
          example: "2020-07-22T10:00:04+09:00"
        TradingVolume:
          description: "売買高<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 4571500.0
        TradingVolumeTime:
          description: "売買高時刻<br>※株式・先物・オプション銘柄の場合のみ"
          type: "string"
          format: "date-time"
          example: "2020-07-22T15:00:00+09:00"
        VWAP:
          description: "売買高加重平均価格（VWAP）<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 2394.4262
        TradingValue:
          description: "売買代金<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 10946119350.0
        BidQty:
          description: "最良売気配数量<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 100.0
        BidPrice:
          description: "最良売気配値段<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 2408.5000
        BidTime:
          description: "最良売気配時刻<br>※株式銘柄の場合のみ"
          type: "string"
          format: "date-time"
          example: "2020-07-22T14:59:59+09:00"
        BidSign:
          description: |-
            最良売気配フラグ<br>※株式・先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0000</td><td>事象なし</td></tr>
            <tr><td>0101</td><td>一般気配</td></tr>
            <tr><td>0102</td><td>特別気配</td></tr>
            <tr><td>0103</td><td>注意気配</td></tr>
            <tr><td>0107</td><td>寄前気配</td></tr>
            <tr><td>0108</td><td>停止前特別気配</td></tr>
            <tr><td>0109</td><td>引け後気配</td></tr>
            <tr><td>0116</td><td>寄前気配約定成立ポイントなし</td></tr>
            <tr><td>0117</td><td>寄前気配約定成立ポイントあり</td></tr>
            <tr><td>0118</td><td>連続約定気配</td></tr>
            <tr><td>0119</td><td>停止前の連続約定気配</td></tr>
            <tr><td>0120</td><td>買い上がり売り下がり中</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "0101"
        MarketOrderSellQty:
          description: "売成行数量<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 0.0
        Sell1:
          description: "売気配数量1本目"
          type: "object"
          properties:
            Time:
              description: "時刻<br>※株式銘柄の場合のみ"
              type: "string"
              format: "date-time"
              example: "2020-07-22T14:59:59+09:00"
            Sign:
              description: |-
                気配フラグ<br>※株式・先物・オプション銘柄の場合のみ
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>0000</td><td>事象なし</td></tr>
                <tr><td>0101</td><td>一般気配</td></tr>
                <tr><td>0102</td><td>特別気配</td></tr>
                <tr><td>0103</td><td>注意気配</td></tr>
                <tr><td>0107</td><td>寄前気配</td></tr>
                <tr><td>0108</td><td>停止前特別気配</td></tr>
                <tr><td>0109</td><td>引け後気配</td></tr>
                <tr><td>0116</td><td>寄前気配約定成立ポイントなし</td></tr>
                <tr><td>0117</td><td>寄前気配約定成立ポイントあり</td></tr>
                <tr><td>0118</td><td>連続約定気配</td></tr>
                <tr><td>0119</td><td>停止前の連続約定気配</td></tr>
                <tr><td>0120</td><td>買い上がり売り下がり中</td></tr>
                </tbody>
                </table>
              type: "string"
              example: "0101"
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2408.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 100.0
        Sell2:
          description: "売気配数量2本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2409.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 800.0
        Sell3:
          description: "売気配数量3本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2409.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2100.0
        Sell4:
          description: "売気配数量4本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2410.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 800.0
        Sell5:
          description: "売気配数量5本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2410.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 500.0
        Sell6:
          description: "売気配数量6本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2411.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 8400.0
        Sell7:
          description: "売気配数量7本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2411.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 1200.0
        Sell8:
          description: "売気配数量8本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2412.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 27200.0
        Sell9:
          description: "売気配数量9本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2412.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 400.0
        Sell10:
          description: "売気配数量10本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2413.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 16400.0
        AskQty:
          description: "最良買気配数量<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 200.0
        AskPrice:
          description: "最良買気配値段<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 2407.5000
        AskTime:
          description: "最良買気配時刻<br>※株式銘柄の場合のみ"
          type: "string"
          format: "date-time"
          example: "2020-07-22T14:59:59+09:00"
        AskSign:
          description: |-
            最良買気配フラグ<br>※株式・先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0000</td><td>事象なし</td></tr>
            <tr><td>0101</td><td>一般気配</td></tr>
            <tr><td>0102</td><td>特別気配</td></tr>
            <tr><td>0103</td><td>注意気配</td></tr>
            <tr><td>0107</td><td>寄前気配</td></tr>
            <tr><td>0108</td><td>停止前特別気配</td></tr>
            <tr><td>0109</td><td>引け後気配</td></tr>
            <tr><td>0116</td><td>寄前気配約定成立ポイントなし</td></tr>
            <tr><td>0117</td><td>寄前気配約定成立ポイントあり</td></tr>
            <tr><td>0118</td><td>連続約定気配</td></tr>
            <tr><td>0119</td><td>停止前の連続約定気配</td></tr>
            <tr><td>0120</td><td>買い上がり売り下がり中</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "0101"
        MarketOrderBuyQty:
          description: "買成行数量<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 0.0
        Buy1:
          description: "買気配数量1本目"
          type: "object"
          properties:
            Time:
              description: "時刻<br>※株式銘柄の場合のみ"
              type: "string"
              format: "date-time"
              example: "2020-07-22T14:59:59+09:00"
            Sign:
              description: |-
                気配フラグ<br>※株式・先物・オプション銘柄の場合のみ
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>0000</td><td>事象なし</td></tr>
                <tr><td>0101</td><td>一般気配</td></tr>
                <tr><td>0102</td><td>特別気配</td></tr>
                <tr><td>0103</td><td>注意気配</td></tr>
                <tr><td>0107</td><td>寄前気配</td></tr>
                <tr><td>0108</td><td>停止前特別気配</td></tr>
                <tr><td>0109</td><td>引け後気配</td></tr>
                <tr><td>0116</td><td>寄前気配約定成立ポイントなし</td></tr>
                <tr><td>0117</td><td>寄前気配約定成立ポイントあり</td></tr>
                <tr><td>0118</td><td>連続約定気配</td></tr>
                <tr><td>0119</td><td>停止前の連続約定気配</td></tr>
                <tr><td>0120</td><td>買い上がり売り下がり中</td></tr>
                </tbody>
                </table>
              type: "string"
              example: "0101"
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2407.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 200.0
        Buy2:
          description: "買気配数量2本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2407.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 400.0
        Buy3:
          description: "買気配数量3本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2406.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 1000.0
        Buy4:
          description: "買気配数量4本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2406.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 5800.0
        Buy5:
          description: "買気配数量5本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2405.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 7500.0
        Buy6:
          description: "買気配数量6本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2405.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2200.0
        Buy7:
          description: "買気配数量7本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2404.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 16700.0
        Buy8:
          description: "買気配数量8本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2404.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 30100.0
        Buy9:
          description: "買気配数量9本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2403.5000
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 1300.0
        Buy10:
          description: "買気配数量10本目"
          type: "object"
          properties:
            Price:
              description: "値段<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 2403.0
            Qty:
              description: "数量<br>※株式・先物・オプション銘柄の場合のみ"
              type: "number"
              format: "double"
              example: 3000.0
        OverSellQty:
          description: "OVER気配数量<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 974900.0
        UnderBuyQty:
          description: "UNDER気配数量<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 756000.0
        TotalMarketValue:
          description: "時価総額<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 3266254659361.4
        ClearingPrice:
          description: "清算値<br>※先物銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 23000
        IV:
          description: "インプライド・ボラティリティ<br>※オプション銘柄かつ日通しの場合のみ"
          type: "number"
          format: "double"
          example: 22.11
        Gamma:
          description: "ガンマ<br>※オプション銘柄かつ日通しの場合のみ"
          type: "number"
          format: "double"
          example: 0.000183
        Theta:
          description: "セータ<br>※オプション銘柄かつ日通しの場合のみ"
          type: "number"
          format: "double"
          example: -6.5073
        Vega:
          description: "ベガ<br>※オプション銘柄かつ日通しの場合のみ"
          type: "number"
          format: "double"
          example: 39.3109
        Delta:
          description: "デルタ<br>※オプション銘柄かつ日通しの場合のみ"
          type: "number"
          format: "double"
          example: 0.4794
    RegistSuccess:
      type: "object"
      properties:
        RegistList:
          description: "現在登録されている銘柄のリスト"
          type: "array"
          items:
              type: "object"
              properties:
                Symbol:
                  description: "銘柄コード"
                  type: "string"
                  example: "9433"
                Exchange:
                  description: |-
                    市場コード
                    <table>
                    <thead>
                    <tr><th>定義値</th><th>説明</th></tr>
                    </thead>
                    <tbody>
                    <tr><td>1</td><td>東証</td></tr>
                    <tr><td>3</td><td>名証</td></tr>
                    <tr><td>5</td><td>福証</td></tr>
                    <tr><td>6</td><td>札証</td></tr>
                    <tr><td>2</td><td>日通し</td></tr>
                    <tr><td>23</td><td>日中</td></tr>
                    <tr><td>24</td><td>夜間</td></tr>
                    </tbody>
                    </table>
                  type: "integer"
                  format: "int32"
                  example: 1
    UnregisterAllSuccess:
      type: "object"
      properties:
        RegistList:
          description: "現在登録されている銘柄のリスト<br>※銘柄登録解除が正常に行われれば、空リストを返します。<br>　登録解除でエラー等が発生した場合、現在登録されている銘柄のリストを返します"
          type: "object"
          example: []
    SymbolSuccess:
      type: "object"
      properties:
        Symbol:
          description: "銘柄コード"
          type: "string"
          example: "9433"
        SymbolName:
          description: "銘柄名"
          type: "string"
          example: "ＫＤＤＩ"
        DisplayName:
          description: "銘柄略称<br>※株式・先物・オプション銘柄の場合のみ"
          type: "string"
          example: "ＫＤＤＩ"
        Exchange:
          description: |-
            市場コード<br>※株式・先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>東証</td></tr>
            <tr><td>3</td><td>名証</td></tr>
            <tr><td>5</td><td>福証</td></tr>
            <tr><td>6</td><td>札証</td></tr>
            <tr><td>2</td><td>日通し</td></tr>
            <tr><td>23</td><td>日中</td></tr>
            <tr><td>24</td><td>夜間</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 1
        ExchangeName:
          description: "市場名称<br>※株式・先物・オプション銘柄の場合のみ"
          type: "string"
          example: "東証１部"
        BisCategory:
          description: |-
            業種コード名<br>※株式銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>0050</td><td>水産・農林業</td></tr>
            <tr><td>1050</td><td>鉱業</td></tr>
            <tr><td>2050</td><td>建設業</td></tr>
            <tr><td>3050</td><td>食料品</td></tr>
            <tr><td>3100</td><td>繊維製品</td></tr>
            <tr><td>3150</td><td>パルプ・紙</td></tr>
            <tr><td>3200</td><td>化学</td></tr>
            <tr><td>3250</td><td>医薬品</td></tr>
            <tr><td>3300</td><td>石油・石炭製品</td></tr>
            <tr><td>3350</td><td>ゴム製品</td></tr>
            <tr><td>3400</td><td>ガラス・土石製品</td></tr>
            <tr><td>3450</td><td>鉄鋼</td></tr>
            <tr><td>3500</td><td>非鉄金属</td></tr>
            <tr><td>3550</td><td>金属製品</td></tr>
            <tr><td>3600</td><td>機械</td></tr>
            <tr><td>3650</td><td>電気機器</td></tr>
            <tr><td>3700</td><td>輸送用機器</td></tr>
            <tr><td>3750</td><td>精密機器</td></tr>
            <tr><td>3800</td><td>その他製品</td></tr>
            <tr><td>4050</td><td>電気・ガス業</td></tr>
            <tr><td>5050</td><td>陸運業</td></tr>
            <tr><td>5100</td><td>海運業</td></tr>
            <tr><td>5150</td><td>空運業</td></tr>
            <tr><td>5200</td><td>倉庫・運輸関連業</td></tr>
            <tr><td>5250</td><td>情報・通信業</td></tr>
            <tr><td>6050</td><td>卸売業</td></tr>
            <tr><td>6100</td><td>小売業</td></tr>
            <tr><td>7050</td><td>銀行業</td></tr>
            <tr><td>7100</td><td>証券、商品先物取引業</td></tr>
            <tr><td>7150</td><td>保険業</td></tr>
            <tr><td>7200</td><td>その他金融業</td></tr>
            <tr><td>8050</td><td>不動産業</td></tr>
            <tr><td>9050</td><td>サービス業</td></tr>
            <tr><td>9999</td><td>その他</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "5250      "
        TotalMarketValue:
          description: "時価総額<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 7654484465100
        TotalStocks:
          description: "発行済み株式数（千株）<br>※株式銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 4484
        TradingUnit:
          description: "売買単位<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 100
        FiscalYearEndBasic:
          description: "決算期日<br>※株式銘柄の場合のみ"
          type: "integer"
          format: "int32"
          example: 20210331
        PriceRangeGroup:
          description: |-
            呼値グループ<br>※株式・先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>呼値コード</th><th>値段の水準</th><th>呼値単位</th></tr>
            </thead>
            <tbody>
            <tr><td>10000</td><td>3000円以下</td><td>1</td></tr>
            <tr><td>10000</td><td>5000円以下</td><td>5</td></tr>
            <tr><td>10000</td><td>30000円以下</td><td>10</td></tr>
            <tr><td>10000</td><td>50000円以下</td><td>50</td></tr>
            <tr><td>10000</td><td>300000円以下</td><td>100</td></tr>
            <tr><td>10000</td><td>500000円以下</td><td>500</td></tr>
            <tr><td>10000</td><td>3000000円以下</td><td>1000</td></tr>
            <tr><td>10000</td><td>5000000円以下</td><td>5000</td></tr>
            <tr><td>10000</td><td>30000000円以下</td><td>10000</td></tr>
            <tr><td>10000</td><td>50000000円以下</td><td>50000</td></tr>
            <tr><td>10000</td><td>50000000円超</td><td>100000</td></tr>
            <tr><td>10003</td><td>1000円以下</td><td>0.1</td></tr>
            <tr><td>10003</td><td>3000円以下</td><td>0.5</td></tr>
            <tr><td>10003</td><td>10000円以下</td><td>1</td></tr>
            <tr><td>10003</td><td>30000円以下</td><td>5</td></tr>
            <tr><td>10003</td><td>100000円以下</td><td>10</td></tr>
            <tr><td>10003</td><td>300000円以下</td><td>50</td></tr>
            <tr><td>10003</td><td>1000000円以下</td><td>100</td></tr>
            <tr><td>10003</td><td>3000000円以下</td><td>500</td></tr>
            <tr><td>10003</td><td>10000000円以下</td><td>1000</td></tr>
            <tr><td>10003</td><td>30000000円以下</td><td>5000</td></tr>
            <tr><td>10003</td><td>50000000円以下</td><td>10000</td></tr>
            <tr><td>10003</td><td>50000000円超</td><td>10000</td></tr>
            <tr><td>10118</td><td>-</td><td>10</td></tr>
            <tr><td>10119</td><td>-</td><td>5</td></tr>
            <tr><td>10318</td><td>100円以下</td><td>1</td></tr>
            <tr><td>10318</td><td>1000円以下</td><td>5</td></tr>
            <tr><td>10318</td><td>1000円超</td><td>10</td></tr>
            <tr><td>10706</td><td>-</td><td>0.25</td></tr>
            <tr><td>10718</td><td>-</td><td>0.5</td></tr>
            <tr><td>12122</td><td>-</td><td>5</td></tr>
            <tr><td>14473</td><td>-</td><td>1</td></tr>
            <tr><td>14515</td><td>-</td><td>0.05</td></tr>
            <tr><td>15411</td><td>-</td><td>1</td></tr>
            <tr><td>15569</td><td>-</td><td>0.5</td></tr>
            <tr><td>17163</td><td>-</td><td>0.5</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "10003"
        KCMarginBuy:
          description: "一般信用買建フラグ<br>※trueのとき一般信用買建可能<br>※株式銘柄の場合のみ"
          type: "boolean"
          format: ""
          example: true
        KCMarginSell:
          description: "一般信用売建フラグ<br>※trueのとき一般信用売建可能<br>※株式銘柄の場合のみ"
          type: "boolean"
          format: ""
          example: true
        MarginBuy:
          description: "制度信用買建フラグ<br>※trueのとき制度信用買建可能<br>※株式銘柄の場合のみ"
          type: "boolean"
          format: ""
          example: true
        MarginSell:
          description: "制度信用売建フラグ<br>※trueのとき制度信用売建可能<br>※株式銘柄の場合のみ"
          type: "boolean"
          format: ""
          example: true
        UpperLimit:
          description: "値幅上限<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 4041
        LowerLimit:
          description: "値幅下限<br>※株式・先物・オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 2641
        Underlyer:
          description: |-
            原資産コード<br>※先物・オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>NK225</td><td>日経225</td></tr>
            <tr><td>NK300</td><td>日経300</td></tr>
            <tr><td>MOTHERS</td><td>東証マザーズ</td></tr>
            <tr><td>JPX400</td><td>JPX日経400</td></tr>
            <tr><td>TOPIX</td><td>TOPIX</td></tr>
            <tr><td>NKVI</td><td>日経平均VI</td></tr>
            <tr><td>DJIA</td><td>NYダウ</td></tr>
            <tr><td>TSEREITINDEX</td><td>東証REIT指数</td></tr>
            <tr><td>TOPIXCORE30</td><td>TOPIX Core30</td></tr>
            </tbody>
            </table>
          type: "string"
          example: "NK225"
        DerivMonth:
          description: "限月-年月<br>※「限月-年月」は「年(yyyy)/月(MM)」で表示します。<br>※先物・オプション銘柄の場合のみ"
          type: "string"
          example: "2020/12"
        TradeStart:
          description: "取引開始日<br>※先物・オプション銘柄の場合のみ"
          type: "integer"
          format: "int32"
          example: 20151211
        TradeEnd:
          description: "取引終了日<br>※先物・オプション銘柄の場合のみ"
          type: "integer"
          format: "int32"
          example: 20201210
        StrikePrice:
          description: "権利行使価格<br>※オプション銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 23250.0
        PutOrCall:
          description: |-
            プット/コール区分<br>※オプション銘柄の場合のみ
            <table>
            <thead>
            <tr><th>定義値</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>1</td><td>プット</td></tr>
            <tr><td>2</td><td>コール</td></tr>
            </tbody>
            </table>
          type: "integer"
          format: "int32"
          example: 2
        ClearingPrice:
          description: "清算値<br>※先物銘柄の場合のみ"
          type: "number"
          format: "double"
          example: 23000
    OrdersSuccess:
      type: "array"
      items:
          type: "object"
          properties:
            ID:
              description: "注文番号"
              type: "string"
              example: "20200715A02N04738436"
            State:
              description: |-
                状態
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>待機（発注待機）</td></tr>
                <tr><td>2</td><td>処理中（発注送信中）</td></tr>
                <tr><td>3</td><td>処理済（発注済・訂正済）</td></tr>
                <tr><td>4</td><td>訂正取消送信中</td></tr>
                <tr><td>5</td><td>終了（発注エラー・取消済・全約定・失効・期限切れ）</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 5
            OrderState:
              description: |-
                注文状態
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>待機（発注待機）</td></tr>
                <tr><td>2</td><td>処理中（発注送信中）</td></tr>
                <tr><td>3</td><td>処理済（発注済・訂正済）</td></tr>
                <tr><td>4</td><td>訂正取消送信中</td></tr>
                <tr><td>5</td><td>終了（発注エラー・取消済・全約定・失効・期限切れ）</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 5
            OrdType:
              description: |-
                執行条件
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>ザラバ</td></tr>
                <tr><td>2</td><td>寄り</td></tr>
                <tr><td>3</td><td>引け</td></tr>
                <tr><td>4</td><td>不成</td></tr>
                <tr><td>5</td><td>対当指値</td></tr>
                <tr><td>6</td><td>IOC</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            RecvTime:
              description: "受注日時"
              type: "string"
              example: "2020-07-16T18:00:51.763683+09:00"
            Symbol:
              description: "銘柄コード"
              type: "string"
              example: "8306"
            SymbolName:
              description: "銘柄名"
              type: "string"
              example: "三菱ＵＦＪフィナンシャル・グループ"
            Exchange:
              description: |-
                市場コード
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>東証</td></tr>
                <tr><td>3</td><td>名証</td></tr>
                <tr><td>5</td><td>福証</td></tr>
                <tr><td>6</td><td>札証</td></tr>
                <tr><td>9</td><td>SOR</td></tr>
                <tr><td>2</td><td>日通し</td></tr>
                <tr><td>23</td><td>日中</td></tr>
                <tr><td>24</td><td>夜間</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            ExchangeName:
              description: "市場名"
              type: "string"
              example: "東証１部"
            TimeInForce:
              description: |-
                有効期間条件<br>※先物・オプション銘柄の場合のみ
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>FAS</td></tr>
                <tr><td>2</td><td>FAK</td></tr>
                <tr><td>3</td><td>FOK</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            Price:
              description: "値段"
              type: "number"
              format: "double"
              example: 704.5
            OrderQty:
              description: "発注数量"
              type: "number"
              format: "double"
              example: 1500
            CumQty:
              description: "約定数量"
              type: "number"
              format: "double"
              example: 1500
            Side:
              description: |-
                売買区分
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>売</td></tr>
                <tr><td>2</td><td>買</td></tr>
                </tbody>
                </table>
              type: "string"
              example: "1"
            CashMargin:
              description: |-
                取引区分
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>2</td><td>新規</td></tr>
                <tr><td>3</td><td>返済</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 2
            AccountType:
              description: |-
                口座種別
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>2</td><td>一般</td></tr>
                <tr><td>4</td><td>特定</td></tr>
                <tr><td>12</td><td>法人</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 4
            DelivType:
              description: |-
                受渡区分
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>自動振替</td></tr>
                <tr><td>2</td><td>お預り金</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 2
            ExpireDay:
              description: "注文有効期限<br>yyyyMMdd形式"
              type: "integer"
              format: "int32"
              example: 20200702
            MarginTradeType:
              description: |-
                信用取引区分
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>制度信用</td></tr>
                <tr><td>2</td><td>一般信用</td></tr>
                <tr><td>3</td><td>一般信用（売短）</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            Details:
              description: "注文詳細"
              type: "array"
              items:
                type: "object"
                properties:
                  SeqNum:
                    description: "※注文明細レコードの生成順序です。<br>※通番であるとは限りませんが、大小による順序は保たれています。"
                    type: "integer"
                    format: "int32"
                    example: 1
                  ID:
                    description: "注文詳細番号"
                    type: "string"
                    example: "20200715A02N04738436"
                  RecType:
                    description: |-
                      明細種別
                      <table>
                      <thead>
                      <tr><th>定義値</th><th>説明</th></tr>
                      </thead>
                      <tbody>
                      <tr><td>1</td><td>受付</td></tr>
                      <tr><td>2</td><td>繰越</td></tr>
                      <tr><td>3</td><td>期限切れ</td></tr>
                      <tr><td>4</td><td>発注</td></tr>
                      <tr><td>5</td><td>訂正</td></tr>
                      <tr><td>6</td><td>取消</td></tr>
                      <tr><td>7</td><td>失効</td></tr>
                      <tr><td>8</td><td>約定</td></tr>
                      </tbody>
                      </table>
                    type: "integer"
                    format: "int32"
                    example: 1
                  ExchangeID:
                    description: "取引所番号"
                    type: "string"
                    example: "00000000-0000-0000-0000-00000000"
                  State:
                    description: |-
                      状態
                      <table>
                      <thead>
                      <tr><th>定義値</th><th>説明</th></tr>
                      </thead>
                      <tbody>
                      <tr><td>1</td><td>待機（発注待機）</td></tr>
                      <tr><td>2</td><td>処理中（発注送信中・訂正送信中・取消送信中）</td></tr>
                      <tr><td>3</td><td>処理済（発注済・訂正済・取消済・全約定・期限切れ）</td></tr>
                      <tr><td>4</td><td>エラー</td></tr>
                      <tr><td>5</td><td>削除済み</td></tr>
                      </tbody>
                      </table>
                    type: "integer"
                    format: "int32"
                    example: 3
                  TransactTime:
                    description: "処理時刻"
                    type: "string"
                    example: "2020-07-16T18:00:51.763683+09:00"
                  OrdType:
                    description: |-
                      執行条件
                      <table>
                      <thead>
                      <tr><th>定義値</th><th>説明</th></tr>
                      </thead>
                      <tbody>
                      <tr><td>1</td><td>ザラバ</td></tr>
                      <tr><td>2</td><td>寄り</td></tr>
                      <tr><td>3</td><td>引け</td></tr>
                      <tr><td>4</td><td>不成</td></tr>
                      <tr><td>5</td><td>対当指値</td></tr>
                      <tr><td>6</td><td>IOC</td></tr>
                      </tbody>
                      </table>
                    type: "integer"
                    format: "int32"
                    example: 1
                  Price:
                    description: "値段"
                    type: "number"
                    format: "double"
                    example: 704.5
                  Qty:
                    description: "数量"
                    type: "number"
                    format: "double"
                    example: 1500
                  ExecutionID:
                    description: "約定番号"
                    type: "string"
                    example: ""
                  ExecutionDay:
                    description: "約定日時"
                    type: "string"
                    format: "date-time"
                    example: "2020-07-02T18:02:00+09:00"
                  DelivDay:
                    description: "受渡日"
                    type: "integer"
                    format: "int32"
                    example: 20200706
                  Commission:
                    description: "手数料<br>※注文詳細の明細種別が約定（RecType=8)の場合に設定。"
                    type: "number"
                    format: "double"
                    example: 0
                  CommissionTax:
                    description: "手数料消費税<br>※明細種別は約定（RecType=8）の場合にのみ表示されます。"
                    type: "number"
                    format: "double"
                    example: 0
    PositionsSuccess:
      type: "array"
      items:
          type: "object"
          properties:
            ExecutionID:
              description: "約定番号<br>※現物取引では、nullが返ります。"
              type: "string"
              example: "20200715E02N04738464"
            AccountType:
              description: |-
                口座種別
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>2</td><td>一般</td></tr>
                <tr><td>4</td><td>特定</td></tr>
                <tr><td>12</td><td>法人</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 4
            Symbol:
              description: "銘柄コード"
              type: "string"
              example: "8306"
            SymbolName:
              description: "銘柄名"
              type: "string"
              example: "三菱ＵＦＪフィナンシャル・グループ"
            Exchange:
              description: |-
                市場コード
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>東証</td></tr>
                <tr><td>3</td><td>名証</td></tr>
                <tr><td>5</td><td>福証</td></tr>
                <tr><td>6</td><td>札証</td></tr>
                <tr><td>2</td><td>日通し</td></tr>
                <tr><td>23</td><td>日中</td></tr>
                <tr><td>24</td><td>夜間</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            ExchangeName:
              description: "市場名"
              type: "string"
              example: "東証１部"
            SecurityType:
              description: "銘柄種別<br>※先物・オプション銘柄の場合のみ"
              type: "integer"
              format: "int32"
              example: 101
            ExecutionDay:
              description: "約定日（建玉日）<br>※信用・先物・オプションの場合のみ<br>※現物取引では、nullが返ります。"
              type: "integer"
              format: "int32"
              example: 20200702
            Price:
              description: "値段"
              type: "number"
              format: "double"
              example: 704
            LeavesQty:
              description: "残数量"
              type: "number"
              format: "double"
              example: 500
            HoldQty:
              description: "拘束数量（保有数量）"
              type: "number"
              format: "double"
              example: 0
            Side:
              description: |-
                売買区分
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>売</td></tr>
                <tr><td>2</td><td>買</td></tr>
                </tbody>
                </table>
              type: "string"
              example: "1"
            Expenses:
              description: "諸経費<br>※信用・先物・オプションの場合のみ"
              type: "number"
              format: "double"
              example: 0
            Commission:
              description: "手数料<br>※信用・先物・オプションの場合のみ"
              type: "number"
              format: "double"
              example: 1620
            CommissionTax:
              description: "手数料消費税<br>※信用・先物・オプションの場合のみ"
              type: "number"
              format: "double"
              example: 162
            ExpireDay:
              description: "返済期日<br>※信用・先物・オプションの場合のみ"
              type: "integer"
              format: "int32"
              example: 20201229
            MarginTradeType:
              description: |-
                信用取引区分<br>※信用の場合のみ
                <table>
                <thead>
                <tr><th>定義値</th><th>説明</th></tr>
                </thead>
                <tbody>
                <tr><td>1</td><td>制度信用</td></tr>
                <tr><td>2</td><td>一般信用</td></tr>
                <tr><td>3</td><td>一般信用（売短）</td></tr>
                </tbody>
                </table>
              type: "integer"
              format: "int32"
              example: 1
            CurrentPrice:
              description: "現在値"
              type: "number"
              format: "double"
              example: 414.5
            Valuation:
              description: "評価金額"
              type: "number"
              format: "double"
              example: 207250
            ProfitLoss:
              description: "評価損益額"
              type: "number"
              format: "double"
              example: 144750
            ProfitLossRate:
              description: "評価損益率"
              type: "number"
              format: "double"
              example: 41.12215909090909
    SymbolNameSuccess:
      type: "object"
      properties:
        Symbol:
          description: "銘柄コード"
          type: "string"
          example: "165120018"
        SymbolName:
          description: "銘柄名称"
          type: "string"
          example: "日経平均先物 20/12"

#Ranking ランキング    
    CommonRankingResponse:
      type: object
      properties:
        Type:
          description: "種別"
          type: string
        ExchangeDivision:
          description: 市場
          type: string
      
    CommonRankingItems:
      type: object
      properties:
        No:
          description: 順位<br>※ランキング内で同じ順位が返却される場合があります（10位が2件など）
          type: "integer"
          format: "int32"
        Trend:
          type: "string"
          description: |-
            トレンド
            <table>
            <thead>
            <tr><th>定義値</th><th>内容</th></tr>
            </thead>
            <tbody>
            <tr><td>0</td><td>対象データ無し</td></tr>
            <tr><td>1</td><td>過去10営業日より20位以上上昇</td></tr>
            <tr><td>2</td><td>過去10営業日より1～19位上昇</td></tr>
            <tr><td>3</td><td>過去10営業日と変わらず</td></tr>
            <tr><td>4</td><td>過去10営業日より1～19位下落</td></tr>
            <tr><td>5</td><td>過去10営業日より20位以上下落</td></tr>
            </tbody>
            </table>  
        AverageRanking:
          type: number
          format: int32
          description: "平均順位<br>※100位以下は「999」となります"
        Symbol:
          description: "銘柄コード"
          type: "string"
        SymbolName:
          description: "銘柄名称"
          type: "string"
        CurrentPrice:
          type: number
          format: double
          description: "現在値"
        ChangeRatio:
          type: number
          format: double
          description: "前日比"
    RankingDefaultResponse:
      title: 株価情報 (種別:1~4)
      allOf:
        - $ref: "#/components/schemas/CommonRankingResponse"
        - type: object
          properties:
            Ranking:
              description: ランキング
              type: array
              items:
                allOf:
                - $ref: "#/components/schemas/CommonRankingItems"
                - type: object
                  properties:
                    ChangePercentage:
                      type: number
                      format: double
                      description: "騰落率（%）"
                    CurrentPriceTime:
                      description: "時刻<br>HH:mm<br>※日付は返しません"
                      type: "string"
                    TradingVolume:
                      type: number
                      format: double
                      description: "売買高"
                    Turnover:
                      type: number
                      format: double
                      description: "売買代金"
                    ExchangeName:
                      description: "市場名"
                      type: "string"
                    CategoryName:
                      description: "業種名"
                      type: "string"
      example:
        Type: 1
        ExchangeDivision: "ALL"
        Ranking:
          - No: 1
            Trend: "1"
            AverageRanking: 9999
            Symbol: "3358"
            SymbolName: "ﾜｲｴｽﾌｰﾄﾞ"
            CurrentPrice: 297
            ChangeRatio: 71
            ChangePercentage: 34.41
            CurrentPriceTime: 15:00
            TradingVolume: 1629.5
            Turnover: 458.575
            ExchangeName: "東証JQS"
            CategoryName: "小売業"
          - No: 2
            Trend: "1"
            AverageRanking: 9999
            Symbol: "7014"
            SymbolName: "名村造"
            CurrentPrice: 199
            ChangeRatio: 43
            ChangePercentage: 27.56
            CurrentPriceTime: 15:00
            TradingVolume: 19720
            Turnover: 3797.37
            ExchangeName: "東証１部"
            CategoryName: "輸送用機器"
    RankingByTickCountResponse:
      title: 株価情報 (種別:5)
      allOf: 
        - $ref: "#/components/schemas/CommonRankingResponse"
        - type: object
          properties:
            Ranking:
              description: ランキング
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/CommonRankingItems"
                  - type: object
                    properties:
                      TickCount:
                        type: number
                        format: int32
                        description: "TICK回数"
                      UpCount:
                        type: number
                        format: int32
                        description: "UP"
                      DownCount:
                        type: number
                        format: int32
                        description: "DOWN"
                      ChangePercentage:
                        type: number
                        format: double
                        description: "騰落率（%）"
                      TradingVolume:
                        type: number
                        format: double
                        description: "売買高"
                      Turnover:
                        type: number
                        format: double
                        description: "売買代金"
                      ExchangeName:
                        description: "市場名"
                        type: "string"
                      CategoryName:
                        description: "業種名"
                        type: "string"
      example:
        Type: 5
        ExchangeDivision: "ALL"
        Ranking:
          - No: 1
            Trend: "2"
            AverageRanking: 2
            Symbol: "9884"
            SymbolName: "ｿﾌﾄﾊﾞﾝｸG"
            CurrentPrice: 8306
            ChangeRatio: 817
            TickCount: 132907
            UpCount: 41144
            DownCount: 40276
            ChangePercentage: 10.9
            TradingVolume: 68384.4
            Turnover: 557485
            ExchangeName: "東証１部"
            CategoryName: "情報・通信業"
          - No : 2
            Trend : "1"
            AverageRanking : 999
            Symbol : "6400"
            SymbolName : 不二精機
            CurrentPrice : 1357
            ChangeRatio : 4
            TickCount : 42016
            UpCount : 14735
            DownCount : 14698
            ChangePercentage : 0.29
            TradingVolume : 11803.4
            Turnover : 17228.4096
            ExchangeName : 東証JQS
            CategoryName : 機械


    RankingByTradeVolumeResponse:
      title: 株価情報 (種別:6)
      allOf: 
        - $ref: "#/components/schemas/CommonRankingResponse"
        - type: object
          properties:
            Ranking:
              description: ランキング
              type: array
              items:
                allOf:
                - $ref: "#/components/schemas/CommonRankingItems"
                - type: object
                  properties:
                    RapidTradePercentage:
                      type: number
                      format: double
                      description: "売買高急増（％）"
                    TradingVolume:
                      type: number
                      format: double
                      description: "売買高"
                    CurrentPriceTime:
                      description: "時刻<br>HH:mm<br>※日付は返しません"
                      type: "string"
                    ChangePercentage:
                      type: number
                      format: double
                      description: "騰落率（%）"
                    ExchangeName:
                      description: "市場名"
                      type: "string"
                    CategoryName:
                      description: "業種名"
                      type: "string"
      example:
        Type: 6
        ExchangeDivision: "ALL"
        Ranking:
          - No : 1
            Trend : "1"
            AverageRanking : 999
            Symbol : 7462
            SymbolName : ﾀﾞｲﾔ通商
            CurrentPrice : 2481
            ChangeRatio : 11
            RapidTradePercentage : 10202.32
            TradingVolume : 177.2
            CurrentPriceTime : 15:00
            ChangePercentage : 0.44
            ExchangeName : 東証JQS
            CategoryName : 小売業
          - No : 2
            Trend : "1"
            AverageRanking : 999
            Symbol : 3358
            SymbolName : ﾜｲｴｽﾌｰﾄﾞ
            CurrentPrice : 297
            ChangeRatio : 71
            RapidTradePercentage : 8983.05
            TradingVolume : 1629.5
            CurrentPriceTime : 15:00
            ChangePercentage : 31.41
            ExchangeName : 東証JQS
            CategoryName : 小売業
    RankingByTradeValueResponse:
      title: 株価情報 (種別:7)
      allOf: 
        - $ref: "#/components/schemas/CommonRankingResponse"
        - type: object
          properties:
            Ranking:
              description: ランキング
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/CommonRankingItems"
                  - type: object
                    properties:
                      RapidPaymentPercentage:
                        type: number
                        format: double
                        description: "代金急増（％）"
                      Turnover:
                        type: number
                        format: double
                        description: "売買代金"
                      CurrentPriceTime:
                        description: "時刻<br>HH:mm<br>※日付は返しません"
                        type: "string"
                      ChangePercentage:
                        type: number
                        format: double
                        description: "騰落率（%）"
                      ExchangeName:
                        description: "市場名"
                        type: "string"
                      CategoryName:
                        description: "業種名"
                        type: "string"
      example:
        Type: 7
        ExchangeDivision: "ALL"
        Ranking:
          - No : 1
            Trend : "1"
            AverageRanking : 999
            Symbol : 3358
            SymbolName : ﾜｲｴｽﾌｰﾄﾞ
            CurrentPrice : 297
            ChangeRatio : 71
            RapidPaymentPercentage : 11085.57
            Turnover : 458.5749
            CurrentPriceTime : 15:00
            ChangePercentage : 31.41
            ExchangeName : 東証JQS
            CategoryName : 小売業
          - No : 2
            Trend : "1"
            AverageRanking : 999
            Symbol : 7462
            SymbolName : ﾀﾞｲﾔ通商
            CurrentPrice : 2481
            ChangeRatio : 11
            RapidPaymentPercentage : 9973.95
            Turnover : 429.1906
            CurrentPriceTime : 15:00
            ChangePercentage : 0.44
            ExchangeName : 東証JQS
            CategoryName : 小売業

    RankingByMarginResponse:
      title: 信用情報（種別:8~13）
      allOf: 
        - $ref: "#/components/schemas/CommonRankingResponse"
        - type: object
          properties:
            Ranking:
              description: ランキング
              type: array
              items:
                type: object
                properties:
                  No:
                    description: 順位<br>※ランキング内で同じ順位が返却される場合があります（10位が2件など）
                    type: "integer"
                    format: "int32"
                  Symbol:
                    description: "銘柄コード"
                    type: "string"
                  SymbolName:
                    description: "銘柄名称"
                    type: "string"
                  SellRapidPaymentPercentage:
                    type: number
                    format: double
                    description: "売残（千株）"
                  SellLastWeekRatio:
                    type: number
                    format: double
                    description: "売残前週比"
                  BuyRapidPaymentPercentage:
                    type: number
                    format: double
                    description: "買残（千株）"
                  BuyLastWeekRatio:
                    type: number
                    format: double
                    description: "買残前週比"
                  Ratio:
                    type: number
                    format: double
                    description: "倍率"
                  ExchangeName:
                    description: "市場名"
                    type: "string"
                  CategoryName:
                    description: "業種名"
                    type: "string"
      example:
        Type: 7
        ExchangeDivision: "ALL"
        Ranking:
          - No : 1
            Symbol : 7888
            SymbolName : 三光合成
            SellRapidPaymentPercentage : 1410.9
            SellLastWeekRatio : 1343.4
            BuyRapidPaymentPercentage : 1108.2
            BuyLastWeekRatio : 832.7
            Ratio : 0.79
            ExchangeName : 東証１部
            CategoryName : 化学
          - No : 2
            Symbol : 4564
            SymbolName : ＯＴＳ
            SellRapidPaymentPercentage : 6588
            SellLastWeekRatio : 1315.7
            BuyRapidPaymentPercentage : 22180.5
            BuyLastWeekRatio : -223.4
            Ratio : 3.37
            ExchangeName : 東証ﾏｻﾞｰｽﾞ
            CategoryName : 医薬品

    RankingByCategoryResponse:
      title: 業種別指数（種別:14~15）
      type: object
      properties:
        Type:
          description: "種別<br> ※業種別値上がり率、業種別値下がり率の場合、市場は「null」になります"
          type: string
        ExchangeDivision:
          description: 市場
          type: string
        Ranking:
          description: ランキング
          type: array
          items:
            type: object
            properties:
              No:
                description: 順位<br>※ランキング内で同じ順位が返却される場合があります（10位が2件など）
                type: "integer"
                format: "int32"
              Trend:
                type: "string"
                description: |-
                  トレンド
                    <table>
                    <thead>
                    <tr><th>定義値</th><th>内容</th></tr>
                    </thead>
                    <tbody>
                    <tr><td>0</td><td>対象データ無し</td></tr>
                    <tr><td>1</td><td>過去10営業日より20位以上上昇</td></tr>
                    <tr><td>2</td><td>過去10営業日より1～19位上昇</td></tr>
                    <tr><td>3</td><td>過去10営業日と変わらず</td></tr>
                    <tr><td>4</td><td>過去10営業日より1～19位下落</td></tr>
                    <tr><td>5</td><td>過去10営業日より20位以上下落</td></tr>
                    </tbody>
                    </table>     
              AverageRanking:
                type: number
                format: int32
                description: "平均順位<br>※100位以下は「999」となります"
              Category:
                description: "業種コード"
                type: "string"
              CategoryName:
                description: "業種名"
                type: "string"
              CurrentPrice:
                type: number
                format: double
                description: "現在値"
              ChangeRatio:
                type: number
                format: double
                description: "前日比"
              CurrentPriceTime:
                description: "時刻<br>HH:mm<br>※日付は返しません"
                type: "string"
              ChangePercentage:
                type: number
                format: double
                description: "騰落率（%）"
      example:
        Type: 7
        ExchangeDivision: "ALL"
        Ranking:
          - No : 1
            Trend : "2"
            AverageRanking : 15
            Category : 345
            CategoryName : IS 情報・通信
            CurrentPrice : 4796.67
            ChangeRatio : 130.81
            CurrentPriceTime : 15:00
            ChangePercentage : 2.8
          - No : 2
            Trend : 2
            AverageRanking : 19
            Category : 321
            CategoryName : IS 水産
            CurrentPrice : 431.45
            ChangeRatio : 3.98
            CurrentPriceTime : 15:00
            ChangePercentage : 0.93
      
    #APIエラー結果
    ErrorResponse:
      type: "object"
      properties:
        Code:
          description: "エラーコード"
          type: "integer"
          format: "int32"
          example: 4001001
        Message:
          description: |-
            エラーメッセージ
            <table>
            <thead>
            <tr><th>エラーコード</th><th>エラーメッセージ</th><th>説明</th></tr>
            </thead>
            <tbody>
            <tr><td>4001001</td><td>内部エラー</td><td>kabuSログファイルを確認<br>してください。</td></tr>
            <tr><td>4001002</td><td>トリガキー生成<br>エラー</td><td>kabuSログファイルを確認<br>してください。</td></tr>
            <tr><td>4001003</td><td>エラー：Uターン</td><td>kabuSログファイルを確認<br>してください。</td></tr>
            <tr><td>4001004</td><td>トリガ生成エラー</td><td>kabuSログファイルを確認<br>してください。</td></tr>
            <tr><td>4001005</td><td>パラメータ変換<br>エラー</td><td>設定したパラメータはkabu<br>ステーション「システム設<br>定」「注文１」の設定内容<br>と相違がないかを確認して<br>ください。</td></tr>
            <tr><td>4001006</td><td>API実行回数エラー</td><td></td></tr>
            <tr><td>4001007</td><td>ログイン認証エラー</td><td>kabuステーションにログイン<br>しているかを確認し<br>てください。</td></tr>
            <tr><td>4001008</td><td>API利用不可</td><td>API利用設定が完了して<br>いるかを確認してください。</td></tr>
            <tr><td>4001009</td><td>APIキー不一致</td><td></td></tr>
            <tr><td>4001010</td><td>クエリ文字列不正</td><td></td></tr>
            <tr><td>4001011</td><td>リクエスト文字列不正</td><td></td></tr>
            <tr><td>4001012</td><td>リクエスト不正</td><td></td></tr>
            <tr><td>4001013</td><td>トークン取得失敗：<br>kabuステーションが<br>ログインして<br>いる状態で、API<br>パスワードが不正</td><td></td></tr>
            <tr><td>4001014</td><td>許可されていない<br>HTTPメソッド</td><td></td></tr>
            <tr><td>4001015</td><td>ContentLength超過</td><td></td></tr>
            <tr><td>4001016</td><td>サポートされていない<br>メディアタイプ</td><td></td></tr>
            <tr><td>4001017</td><td>ログイン認証<br>エラー：kabuS<br>ステーション未<br>ログイン状態。</td><td></td></tr>
            <tr><td>4001018</td><td>銘柄が登録<br>できませんでした</td><td>登録銘柄上限数（50銘柄）<br>以上の銘柄をリクエスト<br>していないかを確認して<br>ください。</td></tr>
            <tr><td>4001019</td><td>一部の銘柄が登録<br>できませんでした</td><td>登録銘柄上限数（50銘柄）<br>以上の銘柄をリクエスト<br>していないかを確認して<br>ください。</td></tr>
            <tr><td>4001020</td><td>銘柄が解除<br>できませんでした</td><td>銘柄が登録されているかを確認して<br>ください。</td></tr>
            <tr><td>4001021</td><td>一部の銘柄が解除<br>できませんでした</td><td>登録銘柄上限数（50銘柄）<br>以上の銘柄をリクエスト<br>していないかを確認して<br>ください。</td></tr>
            <tr><td>4002001</td><td>銘柄が見つから<br>ない</td><td></td></tr>
            <tr><td>4002002</td><td>執行条件エラー</td><td>FrontOrderTypeを確認して<br>ください。</td></tr>
            <tr><td>4002003</td><td>執行条件エラー</td><td>FrontOrderTypeを確認して<br>ください。</td></tr>
            <tr><td>4002004</td><td>トリガチェック<br>エラー - 詳細はkabuS<br>ログファイルを確認<br>してください</td><td></td></tr>
            <tr><td>4002005</td><td>商品エラー</td><td></td></tr>
            <tr><td>4002006</td><td>レジスト数エラー</td><td>登録銘柄上限数（50銘柄）<br>以上の銘柄をリクエスト<br>していないかを確認し<br>てください。</td></tr>
            <tr><td>4002007</td><td>パラメータ不正：<br>AccountType -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002008</td><td>パラメータ不正：<br>Side -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002009</td><td>パラメータ不正：<br>CashMargin -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002010</td><td>パラメータ不正：<br>DelivType -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002011</td><td>パラメータ不正：<br>FundType -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002012</td><td>パラメータ不正：<br>FrontOrderType -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002013</td><td>パラメータ不正：<br>MarginTradeType -<br> 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002014</td><td>パラメータ不正：<br>TimeInForce -<br> 詳細はkabuS<br>ログファイルを確認<br>してください</td><td></td></tr>
            <tr><td>4002015</td><td>パラメータ不正：<br>返済順指定と返済<br>指定は同時に設定<br>できない</td><td></td></tr>
            <tr><td>4002016</td><td>パラメータ不正：<br>DelivType -<br> 詳細はkabuS<br>ログファイルを確認<br>してください</td><td></td></tr>
            <tr><td>4002017</td><td>パラメータ不正：<br>値段指定エラー</td><td></td></tr>
            <tr><td>4002018</td><td>パラメータ不正：<br>IOC対象銘柄では<br>ない - 詳細はkabuS<br>ログファイルを<br>確認してください</td><td></td></tr>
            <tr><td>4002021</td><td>取引期日を過ぎた<br>取引であるか、<br>有効な銘柄ではない<br>ため取引できません</td><td></td></tr>
            <tr><td>4003001</td><td>ワンショット：金額エラー</td><td></td></tr>
            <tr><td>4003002</td><td>ワンショット：数量エラー</td><td></td></tr>
            <tr><td>4004001</td><td>該当注文なしエラー</td><td></td></tr>
            <tr><td>4004002</td><td>取消不可</td><td></td></tr>
            </tbody>
            </table>
          type: "string"
          example: "内部エラー"